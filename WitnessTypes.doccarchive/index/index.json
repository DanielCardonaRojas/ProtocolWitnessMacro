{"includedArchiveIdentifiers":["WitnessTypes"],"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/witnesstypes\/witnessregistry\/table(for:)","title":"func table<WitnessType>(for: WitnessType.Type) -> WitnessTable","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/witnesstypes\/witnessregistry\/shared","title":"static let shared: WitnessRegistry","type":"property"}],"path":"\/documentation\/witnesstypes\/witnessregistry","title":"WitnessRegistry","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/witnesstypes\/witnesstable\/init(name:)","title":"init(name: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/witnesstypes\/witnesstable\/read(type:label:)-4pqt4","title":"func read<T>(type: T.Type, label: String?) -> Any?","type":"method"},{"path":"\/documentation\/witnesstypes\/witnesstable\/read(type:label:)-6jlku","title":"func read(type: String, label: String?) -> Any?","type":"method"},{"path":"\/documentation\/witnesstypes\/witnesstable\/write(type:label:witness:)-3u7on","title":"func write<T>(type: T.Type, label: String?, witness: Any)","type":"method"},{"path":"\/documentation\/witnesstypes\/witnesstable\/write(type:label:witness:)-986fl","title":"func write(type: String, label: String?, witness: Any)","type":"method"}],"path":"\/documentation\/witnesstypes\/witnesstable","title":"WitnessTable","type":"class"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/witnesstypes\/metatypeparser\/parse(_:)","title":"static func parse(any Any.Type) -> ParsedType","type":"method"}],"path":"\/documentation\/witnesstypes\/metatypeparser","title":"MetatypeParser","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/witnesstypes\/parsedtype\/genericarguments","title":"let genericArguments: [ParsedType]","type":"property"},{"path":"\/documentation\/witnesstypes\/parsedtype\/name","title":"let name: String","type":"property"}],"path":"\/documentation\/witnesstypes\/parsedtype","title":"ParsedType","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/witnesstypes\/witnesslookuptable\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/witnesstypes\/witnesslookuptable\/table","title":"let table: WitnessTable","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/witnesstypes\/witnesslookuptable\/witness(for:label:)-3u57e","title":"func witness(for: String, label: String?) -> WitnessType?","type":"method"},{"path":"\/documentation\/witnesstypes\/witnesslookuptable\/witness(for:label:)-7rj2x","title":"func witness<A>(for: A.Type, label: String?) -> WitnessType?","type":"method"}],"path":"\/documentation\/witnesstypes\/witnesslookuptable","title":"WitnessLookUpTable","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/witnesstypes\/witnessoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"path":"\/documentation\/witnesstypes\/witnessoptions\/init(stringliteral:)","title":"init?(stringLiteral: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/witnesstypes\/witnessoptions\/identifiers","title":"var identifiers: [String]","type":"property"},{"path":"\/documentation\/witnesstypes\/witnessoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/witnesstypes\/witnessoptions\/conformanceinit","title":"static let conformanceInit: WitnessOptions","type":"property"},{"path":"\/documentation\/witnesstypes\/witnessoptions\/erasable","title":"static let erasable: WitnessOptions","type":"property"},{"path":"\/documentation\/witnesstypes\/witnessoptions\/synthesizedbytableconformance","title":"static let synthesizedByTableConformance: WitnessOptions","type":"property"},{"path":"\/documentation\/witnesstypes\/witnessoptions\/synthesizedconformance","title":"static let synthesizedConformance: WitnessOptions","type":"property"},{"path":"\/documentation\/witnesstypes\/witnessoptions\/utilities","title":"static let utilities: WitnessOptions","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/witnesstypes\/witnessoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/witnesstypes\/witnessoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/witnesstypes\/witnessoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/witnesstypes\/witnessoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/witnesstypes\/witnessoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/witnesstypes\/witnessoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/witnesstypes\/witnessoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/witnesstypes\/witnessoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/witnesstypes\/witnessoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/witnesstypes\/witnessoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/witnesstypes\/witnessoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/witnesstypes\/witnessoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/witnesstypes\/witnessoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/witnesstypes\/witnessoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/witnesstypes\/witnessoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/witnesstypes\/witnessoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/witnesstypes\/witnessoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/witnesstypes\/witnessoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/witnesstypes\/witnessoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/witnesstypes\/witnessoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/witnesstypes\/witnessoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/witnesstypes\/witnessoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/witnesstypes\/witnessoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/witnesstypes\/witnessoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/witnesstypes\/witnessoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/witnesstypes\/witnessoptions","title":"WitnessOptions","type":"struct"}],"path":"\/documentation\/witnesstypes","title":"WitnessTypes","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":2}}